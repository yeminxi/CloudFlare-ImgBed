{"version":3,"file":"js/226.96391374.js","mappings":"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","sources":["webpack://sanyue_imghub/./src/mixins/backgroundManager.js","webpack://sanyue_imghub/./src/views/WhiteListOn.vue?8ff1","webpack://sanyue_imghub/./src/views/WhiteListOn.vue","webpack://sanyue_imghub/./src/views/WhiteListOn.vue?05e5"],"sourcesContent":["/**\n * 背景图管理 Mixin\n * 用于统一管理页面背景图的加载和轮播逻辑\n */\n\nimport { mapGetters } from 'vuex'\n\nexport default {\n  data() {\n    return {\n      bingWallPaperIndex: 0,\n      customWallPaperIndex: 0,\n      backgroundInterval: null, // 存储轮播定时器\n      // 存储初始化参数，用于主题切换时重新初始化\n      backgroundInitParams: null,\n    }\n  },\n  computed: {\n    ...mapGetters(['userConfig', 'bingWallPapers', 'useDarkMode']),\n    bkInterval() {\n      return this.userConfig?.bkInterval || 3000\n    },\n    bkOpacity() {\n      return this.userConfig?.bkOpacity || 1\n    },\n    // 提供背景图片元素的模板\n    backgroundImagesTemplate() {\n      return `\n        <img id=\"bg1\" class=\"background-image1\" alt=\"Background Image\"/>\n        <img id=\"bg2\" class=\"background-image2\" alt=\"Background Image\"/>\n      `\n    },\n    // 提供背景图片的CSS样式\n    backgroundImagesStyles() {\n      return `\n        .background-image1 {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n          z-index: -1;\n          opacity: 0;\n          transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);\n        }\n        .background-image2 {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n          z-index: -1;\n          opacity: 0;\n          transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);\n        }\n      `\n    }\n  },\n\n  watch: {\n    // 监听深色模式切换\n    useDarkMode(newVal, oldVal) {\n      // 只有在值真正改变且已经初始化过背景时才平滑切换主题\n      if (newVal !== oldVal && this.backgroundInitParams) {\n        this.$nextTick(() => {\n          this.smoothThemeTransition(\n            this.backgroundInitParams.configKey,\n            this.backgroundInitParams.containerSelector,\n            this.backgroundInitParams.useDefaultBackground,\n            this.backgroundInitParams.autoCreateElements\n          )\n        })\n      }\n    }\n  },\n\n  mounted() {\n    // 动态注入背景图片的CSS样式\n    this.injectBackgroundStyles()\n  },\n\n  beforeUnmount() {\n    // 组件销毁前清除定时器\n    if (this.backgroundInterval) {\n      clearInterval(this.backgroundInterval)\n    }\n    // 立即清除背景图片，不使用过渡效果\n    this.clearBackgroundImages(true)\n    // 移除动态注入的样式\n    this.removeBackgroundStyles()\n  },\n\n  methods: {\n    /**\n     * 动态注入背景图片样式\n     */\n    injectBackgroundStyles() {\n      const styleId = 'background-manager-styles'\n      if (!document.getElementById(styleId)) {\n        const style = document.createElement('style')\n        style.id = styleId\n        style.textContent = this.backgroundImagesStyles\n        document.head.appendChild(style)\n      }\n    },\n\n    /**\n     * 移除动态注入的样式\n     */\n    removeBackgroundStyles() {\n      const styleId = 'background-manager-styles'\n      const existingStyle = document.getElementById(styleId)\n      if (existingStyle) {\n        existingStyle.remove()\n      }\n    },\n\n    /**\n     * 动态创建背景图片元素\n     * @param {HTMLElement} container - 要插入背景图片的容器元素\n     */\n    createBackgroundElements(container) {\n      if (!container) {\n        console.warn('未提供有效的容器元素')\n        return\n      }\n\n      // 检查是否已经存在背景图片元素\n      if (document.getElementById('bg1') || document.getElementById('bg2')) {\n        return\n      }\n\n      // 创建 bg1 元素\n      const bg1 = document.createElement('img')\n      bg1.id = 'bg1'\n      bg1.className = 'background-image1'\n      bg1.alt = 'Background Image'\n      \n      // 创建 bg2 元素\n      const bg2 = document.createElement('img')\n      bg2.id = 'bg2'\n      bg2.className = 'background-image2'\n      bg2.alt = 'Background Image'\n\n      // 将元素插入到容器的开头\n      container.insertBefore(bg1, container.firstChild)\n      container.insertBefore(bg2, container.firstChild)\n    },\n    /**\n     * 初始化背景图\n     * @param {string} configKey - 用户配置中的背景图配置键名\n     * @param {string} containerSelector - 容器选择器，用于设置透明背景\n     * @param {boolean} useDefaultBackground - 是否使用默认背景图\n     * @param {boolean} autoCreateElements - 是否自动创建背景元素\n     */\n    initializeBackground(configKey, containerSelector = '.login', useDefaultBackground = false, autoCreateElements = false) {\n      // 保存初始化参数，用于主题切换时重新初始化\n      this.backgroundInitParams = {\n        configKey,\n        containerSelector,\n        useDefaultBackground,\n        autoCreateElements\n      }\n\n      // 如果需要自动创建元素且元素不存在，则创建\n      if (autoCreateElements) {\n        const container = document.querySelector(containerSelector)\n        if (container && (!document.getElementById('bg1') || !document.getElementById('bg2'))) {\n          this.createBackgroundElements(container)\n        }\n      }\n\n      const bg1 = document.getElementById('bg1')\n      const bg2 = document.getElementById('bg2')\n      \n      if (!bg1 || !bg2) {\n        console.warn('背景图元素 #bg1 或 #bg2 未找到，请确保页面中包含这些元素或启用 autoCreateElements')\n        return\n      }\n\n      const backgroundConfig = this.userConfig?.[configKey]\n\n      if (backgroundConfig === 'bing') {\n        this.setupBingWallpaper(bg1, bg2, containerSelector)\n      } else if (Array.isArray(backgroundConfig) && backgroundConfig.length > 1) {\n        this.setupCustomWallpaperCarousel(bg1, bg2, backgroundConfig, containerSelector)\n      } else if (Array.isArray(backgroundConfig) && backgroundConfig.length === 1) {\n        this.setupSingleCustomWallpaper(bg1, backgroundConfig[0], containerSelector)\n      } else if (useDefaultBackground) {\n        this.setupDefaultWallpaper(bg1, containerSelector)\n      }\n    },\n\n    /**\n     * 设置 Bing 壁纸轮播\n     */\n    setupBingWallpaper(bg1, bg2, containerSelector) {\n      this.$store.dispatch('fetchBingWallPapers').then(() => {\n        if (this.bingWallPapers.length === 0) return\n\n        this.loadBackgroundImage(bg1, this.bingWallPapers[this.bingWallPaperIndex]?.url, containerSelector)\n        \n        this.backgroundInterval = setInterval(() => {\n          this.switchBingWallpaper(bg1, bg2)\n        }, this.bkInterval)\n      })\n    },\n\n    /**\n     * 设置自定义壁纸轮播\n     */\n    setupCustomWallpaperCarousel(bg1, bg2, wallpapers, containerSelector) {\n      this.loadBackgroundImage(bg1, wallpapers[this.customWallPaperIndex], containerSelector)\n      \n      this.backgroundInterval = setInterval(() => {\n        this.switchCustomWallpaper(bg1, bg2, wallpapers)\n      }, this.bkInterval)\n    },\n\n    /**\n     * 设置单张自定义壁纸\n     */\n    setupSingleCustomWallpaper(bg1, wallpaperUrl, containerSelector) {\n      this.loadBackgroundImage(bg1, wallpaperUrl, containerSelector)\n    },\n\n    /**\n     * 设置默认壁纸\n     */\n    setupDefaultWallpaper(bg1, containerSelector) {\n      // 根据当前深色模式状态选择背景图\n      const isDark = this.useDarkMode\n      const defaultImage = isDark \n        ? require('@/assets/background.webp') \n        : require('@/assets/background-light.webp')\n      \n      this.loadBackgroundImage(bg1, defaultImage, containerSelector)\n    },\n\n    /**\n     * 加载背景图片\n     */\n    loadBackgroundImage(imgElement, imageSrc, containerSelector) {\n      imgElement.src = imageSrc\n      imgElement.onload = () => {\n        imgElement.style.opacity = this.bkOpacity\n        // 设置容器背景为透明\n        const container = document.querySelector(containerSelector)\n        if (container) {\n          container.style.background = 'transparent'\n        }\n      }\n    },\n\n    /**\n     * 切换 Bing 壁纸\n     */\n    switchBingWallpaper(bg1, bg2) {\n      if (this.bingWallPapers.length === 0) return\n\n      const curBg = bg1.style.opacity != 0 ? bg1 : bg2\n      const nextBg = bg1.style.opacity != 0 ? bg2 : bg1\n      \n      curBg.style.opacity = 0\n      this.bingWallPaperIndex = (this.bingWallPaperIndex + 1) % this.bingWallPapers.length\n      \n      nextBg.src = this.bingWallPapers[this.bingWallPaperIndex]?.url\n      nextBg.onload = () => {\n        nextBg.style.opacity = this.bkOpacity\n      }\n    },\n\n    /**\n     * 切换自定义壁纸\n     */\n    switchCustomWallpaper(bg1, bg2, wallpapers) {\n      const curBg = bg1.style.opacity != 0 ? bg1 : bg2\n      const nextBg = bg1.style.opacity != 0 ? bg2 : bg1\n      \n      curBg.style.opacity = 0\n      this.customWallPaperIndex = (this.customWallPaperIndex + 1) % wallpapers.length\n      \n      nextBg.src = wallpapers[this.customWallPaperIndex]\n      nextBg.onload = () => {\n        nextBg.style.opacity = this.bkOpacity\n      }\n    },\n\n    /**\n     * 清除背景轮播定时器\n     */\n    clearBackgroundInterval() {\n      if (this.backgroundInterval) {\n        clearInterval(this.backgroundInterval)\n        this.backgroundInterval = null\n      }\n    },\n\n    /**\n     * 清除背景图片显示（带过渡效果）\n     * @param {boolean} immediate - 是否立即清除，不使用过渡效果\n     */\n    clearBackgroundImages(immediate = false) {\n      const bg1 = document.getElementById('bg1')\n      const bg2 = document.getElementById('bg2')\n      \n      if (immediate) {\n        // 立即清除，不使用过渡效果\n        if (bg1) {\n          bg1.style.transition = 'none'\n          bg1.style.opacity = 0\n          bg1.src = ''\n          // 恢复过渡效果\n          setTimeout(() => {\n            if (bg1) bg1.style.transition = 'opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1)'\n          }, 50)\n        }\n        if (bg2) {\n          bg2.style.transition = 'none'\n          bg2.style.opacity = 0\n          bg2.src = ''\n          // 恢复过渡效果\n          setTimeout(() => {\n            if (bg2) bg2.style.transition = 'opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1)'\n          }, 50)\n        }\n      } else {\n        // 使用过渡效果淡出\n        if (bg1) {\n          bg1.style.opacity = 0\n          setTimeout(() => {\n            if (bg1) bg1.src = ''\n          }, 800) // 等待过渡完成后清除src\n        }\n        if (bg2) {\n          bg2.style.opacity = 0\n          setTimeout(() => {\n            if (bg2) bg2.src = ''\n          }, 800) // 等待过渡完成后清除src\n        }\n      }\n    },\n\n    /**\n     * 平滑主题切换（用于响应主题模式变化）\n     * @param {string} configKey - 用户配置中的背景图配置键名\n     * @param {string} containerSelector - 容器选择器\n     * @param {boolean} useDefaultBackground - 是否使用默认背景图\n     * @param {boolean} autoCreateElements - 是否自动创建背景元素\n     */\n    smoothThemeTransition(configKey, containerSelector = '.login', useDefaultBackground = false, autoCreateElements = false) {\n      const backgroundConfig = this.userConfig?.[configKey]\n      \n      // 如果不是默认背景配置，则直接重新初始化（自定义背景不受主题影响）\n      if (!useDefaultBackground || backgroundConfig !== undefined) {\n        this.reinitializeBackground(configKey, containerSelector, useDefaultBackground, autoCreateElements)\n        return\n      }\n\n      // 对于默认背景，执行平滑过渡\n      const bg1 = document.getElementById('bg1')\n      const bg2 = document.getElementById('bg2')\n      \n      if (!bg1 || !bg2) {\n        // 如果背景元素不存在，直接重新初始化\n        this.reinitializeBackground(configKey, containerSelector, useDefaultBackground, autoCreateElements)\n        return\n      }\n\n      // 确定当前显示的背景和下一个背景\n      const currentBg = bg1.style.opacity != 0 ? bg1 : bg2\n      const nextBg = bg1.style.opacity != 0 ? bg2 : bg1\n\n      // 获取新主题对应的背景图\n      const isDark = this.useDarkMode\n      const newThemeImage = isDark \n        ? require('@/assets/background.webp') \n        : require('@/assets/background-light.webp')\n\n      // 预加载新背景图\n      const preloadImg = new Image()\n      preloadImg.onload = () => {\n        // 设置下一个背景的图片源\n        nextBg.src = newThemeImage\n        \n        // 等待图片加载完成后执行淡入淡出过渡\n        nextBg.onload = () => {\n          // 淡出当前背景\n          currentBg.style.opacity = 0\n          \n          // 稍微延迟后淡入新背景，确保过渡效果平滑\n          setTimeout(() => {\n            nextBg.style.opacity = this.bkOpacity\n            \n            // 设置容器背景为透明\n            const container = document.querySelector(containerSelector)\n            if (container) {\n              container.style.background = 'transparent'\n            }\n          }, 50) // 50ms 延迟，让淡出效果先开始\n        }\n      }\n      \n      preloadImg.onerror = () => {\n        // 如果预加载失败，回退到直接重新初始化\n        console.warn('主题背景图预加载失败，回退到直接切换')\n        this.reinitializeBackground(configKey, containerSelector, useDefaultBackground, autoCreateElements)\n      }\n      \n      preloadImg.src = newThemeImage\n    },\n\n    /**\n     * 重新初始化背景图（用于响应配置变化）\n     */\n    reinitializeBackground(configKey, containerSelector = '.login', useDefaultBackground = false, autoCreateElements = false) {\n      this.clearBackgroundInterval()\n      this.clearBackgroundImages(true) // 使用立即清除\n      this.bingWallPaperIndex = 0\n      this.customWallPaperIndex = 0\n      \n      // 延迟一小段时间确保清理完成\n      setTimeout(() => {\n        this.initializeBackground(configKey, containerSelector, useDefaultBackground, autoCreateElements)\n      }, 100)\n    }\n  }\n}\n","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"whitelist-container\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = {\n  class: \"whitelist-content\"\n};\nconst _hoisted_4 = {\n  class: \"back-button-wrapper\"\n};\nconst _hoisted_5 = {\n  class: \"status-animation\"\n};\nconst _hoisted_6 = {\n  class: \"status-icon\"\n};\nconst _hoisted_7 = {\n  class: \"status-badge\"\n};\nconst _hoisted_8 = {\n  class: \"status-info\"\n};\nconst _hoisted_9 = {\n  class: \"status-actions\"\n};\nconst _hoisted_10 = {\n  class: \"help-info\"\n};\nconst _hoisted_11 = {\n  class: \"quick-links\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"background-wrapper\",\n    innerHTML: _ctx.backgroundImagesTemplate\n  }, null, 8, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n    class: \"back-button\",\n    onClick: $options.goHome,\n    circle: \"\",\n    size: \"large\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"home\"\n    })]),\n    _: 1\n  }, 8, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_font_awesome_icon, {\n    icon: \"shield-alt\",\n    class: \"shield-icon\"\n  }), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_font_awesome_icon, {\n    icon: \"clock\",\n    class: \"clock-icon\"\n  })])])]), _createElementVNode(\"div\", _hoisted_8, [_cache[7] || (_cache[7] = _createElementVNode(\"h1\", {\n    class: \"status-title\"\n  }, \"白名单模式已启用\", -1)), _cache[8] || (_cache[8] = _createElementVNode(\"p\", {\n    class: \"status-description\"\n  }, \" 抱歉，当前已开启白名单模式，上传的图片需要审核通过后才能展示，请等待审核通过后再进行访问。 \", -1)), _cache[9] || (_cache[9] = _createElementVNode(\"p\", {\n    class: \"status-description-en\"\n  }, \" Sorry, the whitelist mode is currently enabled, the uploaded images need to be audited before they can be displayed, please wait for the audit to be passed before visiting. \", -1)), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"large\",\n    class: \"action-btn primary-btn\",\n    onClick: $options.goHome\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"home\",\n      class: \"btn-icon\"\n    }), _cache[2] || (_cache[2] = _createTextVNode(\" 返回首页 \"))]),\n    _: 1\n  }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n    size: \"large\",\n    class: \"action-btn secondary-btn\",\n    onClick: $options.goBack\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"arrow-left\",\n      class: \"btn-icon\"\n    }), _cache[3] || (_cache[3] = _createTextVNode(\" 返回上页 \"))]),\n    _: 1\n  }, 8, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_10, [_cache[6] || (_cache[6] = _createElementVNode(\"p\", {\n    class: \"help-text\"\n  }, \"您可以尝试：\", -1)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"a\", {\n    href: \"javascript:void(0)\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goHome && $options.goHome(...args)),\n    class: \"quick-link\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"cloud-upload-alt\"\n  }), _cache[4] || (_cache[4] = _createTextVNode(\" 图片上传 \"))]), _createElementVNode(\"a\", {\n    href: \"javascript:void(0)\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.refreshPage && $options.refreshPage(...args)),\n    class: \"quick-link\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"redo\"\n  }), _cache[5] || (_cache[5] = _createTextVNode(\" 刷新页面 \"))])])]), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    class: \"powered-by\"\n  }, [_createElementVNode(\"p\", null, [_createTextVNode(\"Powered By: \"), _createElementVNode(\"a\", {\n    href: \"https://github.com/MarSeventh/CloudFlare-ImgBed\",\n    class: \"project-link\"\n  }, \" CloudFlare-ImgBed \")])], -1))])]), _cache[11] || (_cache[11] = _createStaticVNode(\"<div class=\\\"floating-elements\\\" data-v-ca56fa40><div class=\\\"floating-shape shape-1\\\" data-v-ca56fa40></div><div class=\\\"floating-shape shape-2\\\" data-v-ca56fa40></div><div class=\\\"floating-shape shape-3\\\" data-v-ca56fa40></div><div class=\\\"floating-shape shape-4\\\" data-v-ca56fa40></div><div class=\\\"floating-shape shape-5\\\" data-v-ca56fa40></div></div>\", 1))]);\n}","import \"core-js/modules/es.array.push.js\";\nimport { useHead } from '@vueuse/head';\nimport { mapGetters } from 'vuex';\nimport backgroundManager from '@/mixins/backgroundManager';\nexport default {\n  name: 'WhiteListOn',\n  mixins: [backgroundManager],\n  computed: {\n    ...mapGetters(['useDarkMode', 'userConfig'])\n  },\n  setup() {\n    useHead({\n      title: 'White List On',\n      meta: [{\n        name: 'robots',\n        content: 'noindex, nofollow'\n      }, {\n        name: 'viewport',\n        content: 'width=device-width, initial-scale=1'\n      }, {\n        charset: 'UTF-8'\n      }]\n    });\n  },\n  mounted() {\n    // 初始化背景图\n    this.initializeBackground('uploadBkImg', '.whitelist-container', false, true);\n  },\n  beforeUnmount() {\n    // 清理背景轮播定时器\n    this.clearBackgroundInterval();\n  },\n  methods: {\n    goHome() {\n      this.$router.push('/');\n    },\n    goBack() {\n      if (window.history.length > 1) {\n        this.$router.go(-1);\n      } else {\n        this.$router.push('/');\n      }\n    },\n    refreshPage() {\n      window.location.reload();\n    }\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./WhiteListOn.vue?vue&type=template&id=ca56fa40&scoped=true\"\nimport script from \"./WhiteListOn.vue?vue&type=script&lang=js\"\nexport * from \"./WhiteListOn.vue?vue&type=script&lang=js\"\n\nimport \"./WhiteListOn.vue?vue&type=style&index=0&id=ca56fa40&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ca56fa40\"]])\n\nexport default __exports__"],"names":["data","bingWallPaperIndex","customWallPaperIndex","backgroundInterval","backgroundInitParams","computed","mapGetters","bkInterval","this","userConfig","bkOpacity","backgroundImagesTemplate","backgroundImagesStyles","watch","useDarkMode","newVal","oldVal","$nextTick","smoothThemeTransition","configKey","containerSelector","useDefaultBackground","autoCreateElements","mounted","injectBackgroundStyles","beforeUnmount","clearInterval","clearBackgroundImages","removeBackgroundStyles","methods","styleId","document","getElementById","style","createElement","id","textContent","head","appendChild","existingStyle","remove","createBackgroundElements","container","console","warn","bg1","className","alt","bg2","insertBefore","firstChild","initializeBackground","querySelector","backgroundConfig","setupBingWallpaper","Array","isArray","length","setupCustomWallpaperCarousel","setupSingleCustomWallpaper","setupDefaultWallpaper","$store","dispatch","then","bingWallPapers","loadBackgroundImage","url","setInterval","switchBingWallpaper","wallpapers","switchCustomWallpaper","wallpaperUrl","isDark","defaultImage","require","imgElement","imageSrc","src","onload","opacity","background","curBg","nextBg","clearBackgroundInterval","immediate","transition","setTimeout","undefined","reinitializeBackground","currentBg","newThemeImage","preloadImg","Image","onerror","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","render","_ctx","_cache","$props","$setup","$data","$options","_component_font_awesome_icon","_component_el_button","innerHTML","onClick","goHome","circle","size","default","icon","_","type","goBack","href","args","refreshPage","name","mixins","backgroundManager","setup","u","title","meta","content","charset","$router","push","window","history","go","location","reload","__exports__"],"sourceRoot":""}